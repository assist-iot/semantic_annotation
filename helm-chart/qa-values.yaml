# Default values for enabler.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# String to partially override enabler.fullname template (will maintain the release name)
nameOverride: ""
# String to fully override enabler.fullname template
fullnameOverride: ""
# Deploy all the components in the same node
enablerNodeSelector: {}

flavor: "standalone" # standalone | persistent
# {{ .Values.flavor | default "default" | quote }}

# Component streamer values
streamer:
  tier: external
  image:
    repository: docker pull assistiot/semantic_annotation
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: latest

  replicaCount: 1
  service:
    type: NodePort
    nodePort: ""
    port: 8080
    targetPort: 8080
    containerPort: 8080
    protocol: TCP

  # The specification of the resources is needed for the proper functioning
  # of the Smart Orchestrator enabler (requests)
  # and of the Resource provisioning enabler (limits)
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
  #   cpu: 100m
  #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 1
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  # Include here the environment variables to be used in the component's manifest (container section).
  # Here and in the manifest is included an example.
  envVars:
    #    SEAMAN_STANDALONE_MODE: false # This is set by value of "flavor"
    SEAMAN_RESTORE_STOPPED: false
    SEAMAN_LOG_TO_FILE: false
    SEAMAN_LOG_LEVEL: INFO
    MONGO_HOST: mongodb
    MONGO_PORT: 27017
    MONGO_USER: seaman
    MONGO_PASS: aD9vJjallcKa&zP3qjG_Gqi4B
    MONGO_DATABASE: seaman

  imagePullSecrets: []
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Component mongodb values
mongodb:
  tier: internal
  image:
    repository: docker.io/bitnami/mongodb
    pullPolicy: IfNotPresent
    tag: "6.0.2"

  replicaCount: 1
  service:
    type: ClusterIP
    nodePort: ""
    port: 27017
    targetPort: 27017
    containerPort: 27017
    protocol: TCP

  # The specification of the resources is needed for the proper functioning
  # of the Smart Orchestrator enabler (requests)
  # and of the Resource provisioning enabler (limits)
  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
  #   cpu: 100m
  #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

  # Include here the environment variables to be used in the component's manifest (container section).
  # Here and in the manifest is included an example.
  envVars:
    MONGODB_ROOT_USER: mongo_root
    MONGODB_ROOT_PASSWORD: t6H8rxeVUXzPVKiEFqUW
    ALLOW_EMPTY_PASSWORD: "false"
    mongoReplicaSet: replicaset

  persistence:
    # mountPath: /path/in/container
    accessModes:
      - ReadWriteOnce
    size: 1Gi

  imagePullSecrets: []
  nodeSelector: {}
  tolerations: []
  affinity: {}
